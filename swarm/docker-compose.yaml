# Docker stack for playing with swarm in swarm
  # export MANAGER_TOKEN=`docker swarm join-token -q manager`; \
  # export WORKER_TOKEN=`docker swarm join-token -q worker`; \
  # export DOCKER_VERSION=$( docker version -f '{{.Server.Version}}' )
  # export HOST_IP=`docker info -f "{{.Swarm.NodeAddr}}"`
version: '3'
services:

  manager:
    image: docker:${DOCKER_VERSION:-17}-dind
    privileged: true
    ports: [ 2375 ]
    environment:
      token: ${MANAGER_TOKEN}
      opts: --label location=denver
    entrypoint: &script
      - sh
      - -c
      - |
        set -e
        dockerd-entrypoint.sh $${opts} --storage-driver=overlay2 --registry-mirror=http://${HOST_IP}:5000 &
        trap "killall dockerd" INT
        timeout=100
        until docker info || [ $$timeout -le 0 ]
          do sleep 0.1
          timeout=`expr $${timeout} - 1`
        done
        docker swarm join --token $${token} ${HOST_IP}:2377
        wait

  worker:
    image: docker:${DOCKER_VERSION:-17}-dind
    privileged: true
    ports: [ 2375 ]
    environment:
      token: ${WORKER_TOKEN}
      opts: --label location=denver
    entrypoint: *script

  # example of using labels to classify mock infrastructure from a target environemnt
  gcp-worker:
    image: docker:${DOCKER_VERSION:-17}-dind
    privileged: true
    ports: [ 2375 ]
    environment:
      token: ${WORKER_TOKEN}
      opts: --label location=us-west1 --label provider=gcp --label public=true
    entrypoint: *script